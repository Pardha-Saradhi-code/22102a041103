import java.util.*;
class c3{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr1[]=new int[n];
        int arr2[]=new int[n];
        for(int i=0;i<n;i++){
            arr1[i]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            arr2[i]=sc.nextInt();
        }
        int arr3[]=new int[n];
        for(int i=0;i<n;i++){
            arr3[i]=arr1[i]+arr2[i];
        }
        for(int i=0;i<n;i++){
            System.out.print(arr3[i]+" ");
        }
    }
}

import java.util.*;
class c4{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        int rev[]=new int[n];
        int x=n-1;
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            rev[i]=arr[x];
            x--;
        }
        for(int i=0;i<n;i++){
            System.out.print(rev[i]+" ");
        }
    }
}


import java.util.*;
class c5{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        int min=Integer.MAX_VALUE;
        int max=Integer.MIN_VALUE;
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
            if(arr[i]>max){
                max=arr[i];
            }
            if(arr[i]<min){
                min=arr[i];
            }
        }
        System.out.print("max="+max+" min="+min);
    }
}




1.SUM AND AVERAGE INA ANA ARRAY
import java.util.*;
public class main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        int sum=0;
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
            sum+=arr[i];
        }
        int average=sum/n;
        System.out.println("sum:" +sum);
        System.out.println("average:"+average);
    }
}
2.NO.OF EVEN AND ODD ARE THERE IN AN ARRAY
import java.util.*;
public class main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        int even=0;
        int odd=0;
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
            if(arr[i]%2==0){
                even++;
            }
            else{
                odd++;
            }
        }
        System.out.println("evencount:"+even);
        System.out.println("oddcount:"+odd);
    }
}
3.THE ARRAY IS SORTED IN ASCENDING ORDER OR NOT
import java.util.*;
public class main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        for(int i=0;i<n-1;i++){
            if(arr[i]>arr[i+1]){
                System.out.print("false");
                break;
            }else if(i+1==n && arr[i]<arr[i+1]){
                System.out.print("true");
            }
        }
    }
}
4.REMOVE THE DUPLICATE ELEMENT IN AN ARRAY 
import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<n;i++){
            int x=arr[i];
            map.put(x,map.getOrDefault(x,0)+1);
        }
        for(int key:map.keySet()){
            int x=map.get(key);
            if(x>1){
                System.out.print(key+" ");
            }
        }
    }
}
5.REMOVE A TARGETD ELEMENT IN AN ARRAY
import java.util.*;
class c10{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        int target=sc.nextInt();
        ArrayList<Integer> sap=new ArrayList<>();
        for(int i=0;i<n;i++){
            if(arr[i]!=target){
                sap.add(arr[i]);
            }
        }
        int z=sap.size();
        for(int i=0;i<z;i++){
            System.out.print(sap.get(i)+" ");
        }
    }
}
6.FIND THE PAIR OF SUM TO THE TARGETED ELEMENT
import java.util.*;
class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<n;i++){
            int x=arr[i];
            map.put(x,map.getOrDefault(x,0)+1);
        }
        for(int key:map.keySet()){
            int x=map.get(key);
            if(x>1){
                System.out.print(key+" ");
            }
        }
    }
}
removing seepical characters
import java.util.*;
class c12{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String str=sc.nextLine();
        ArrayList<Character> s=new ArrayList<>();
        for(int i=0;i<str.length();i++){
            char ch=str.charAt(i);
            if(Character.isLetterOrDigit(ch)){
                System.out.print(ch);
            }
        }
    }
}
sort with pointers
import java.util.*;
class c13{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        int a=0;
        int b=n-1;
        for(int i=0;i<n;i++){
            int temp=arr[a];
            arr[a]=arr[b];
            arr[b]=temp;
            a++;
            b--;
            if(a>b){
                break;
            }
        }
        for(int i=0;i<n;i++){
            System.out.print(arr[i]+" ");
        }
    }
}
vowel and consonant count
import java.util.*;
class c14{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String str=sc.nextLine();
        char Vowel[]={'a','e','i','o','u','A','E','I','O','U'};
        int vc=0;
        int x=str.length();
        for(int i=0;i<x;i++){
            char ch=str.charAt(i);
            for(int j=0;j<Vowel.length;j++){
                if(ch==Vowel[j]){
                    vc++;
                }
            }
        }
        int d=x-vc;
        System.out.print(vc+" "+d);
    }
}
merge sort array
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int l=nums1.length;
        int x=0;
        for(int i=m;i<l;i++){
            nums1[i]=nums2[x];
            x++;
        }

        // simple bubble sort
        for(int i=0;i<l-1;i++){
            for(int j=0;j<l-1-i;j++){
                if(nums1[j]>nums1[j+1]){
                    int temp=nums1[j];
                    nums1[j]=nums1[j+1];
                    nums1[j+1]=temp;
                }
            }
        }

        for(int i=0;i<l;i++){
            System.out.print(nums1[i]+" ");
        }
    }
}
search insert postion
class Solution {
    public int searchInsert(int[] nums, int target) {
        int n=nums.length;
        for(int i=0;i<n;i++){
            if(nums[i]>=target){
                return i;
            }  
        }  
        return n; 
    }
}
